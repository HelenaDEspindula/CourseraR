knitr::opts_chunk$set(echo = TRUE)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurants.csv", method = "curl")
x <- 3.475
n <- 2
abs(x)
#valor absoluto
sqtr(x)
knitr::opts_chunk$set(echo = TRUE)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurants.csv", method = "curl")
library(reshape2)
install.packages("reshape2")
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), mesures.vars=c("mpg", "hp"))
head(carMelt, n=3)
tail(carMelt, n=3)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
# soma da contagem de insetos por spray (A, B, etc)
# ANOTHER WAY - SPLIT:
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
# soma da contagem de insetos por spray (A, B, etc)
# ANOTHER WAY - SPLIT:
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount <- lapply(spIns, sum)
sprCount
install.packages("plyr")
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
# (dados,.(variavel de interesse sem aspas), o que fazer, como fazer)
spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count, FUN=sum))
dim(spraySums)
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
# (dados,.(variavel de interesse sem aspas), o que fazer, como fazer)
spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count, FUN=sum))
dim(spraySums)
head(spraySums)
install.packages("dplyr")
chicago <- readRDS("chicago.rds")
dim(chicago)
str(chicago)
names(chicago)
head(select(chicago, city:dptp)) #colunas de city a dptp
install.packages("swirl")
library(swirl)
swirl()
#Project of Coursera
#1 - Merging
traingset <- read.table("./data/X_train.txt") #Training set.
testset <- read.table("./data/X_test.txt") #Test set
#Project of Coursera
#1 - Merging
traingset <- read.table("./data/X_train.txt") #Training set.
head(traingset)
testset <- read.table("./data/X_test.txt") #Test set
head(testset)
#Project of Coursera
#1 - Merging
traingset <- read.table("./data/X_train.txt") #Training set
trainglabes <- read.table("./data/y_train.txt") #Training labes
names(traingset)
names(trainglabes)
#head(traingset)
testset <- read.table("./data/X_test.txt") #Test set
testlabes <- read.table("./data/X_test.txt") #Test labes
#head(testset)
names(testset)
names(testlabes)
#Project of Coursera
#1 - Merging
traingset <- read.table("./data/X_train.txt") #Training set
trainglabes <- read.table("./data/y_train.txt") #Training labes
head(trainglabes)
#names(traingset)
#names(trainglabes)
#head(traingset)
testset <- read.table("./data/X_test.txt") #Test set
testlabes <- read.table("./data/X_test.txt") #Test labes
#head(testset)
#names(testset)
#names(testlabes)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
head(traingset)
head(testset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
head(traingset)
head(testset)
head(variables)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
head(traingset)
head(testset)
head(variables)
names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
head(traingset)
head(testset)
head(variables)
for (i in 1:561) {
names(traingset[i]) <- variables[i,2]
}
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
head(traingset)
head(testset)
head(variables)
for (i in 1:561) {
names(traingset[i]) <- variables[i,2]
}
names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
head(traingset)
head(testset)
head(variables)
for (i in 1:561) {
variables[i,2]
}
names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
for (i in 1:561) {
variables["V2"]
}
#names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
variables["V2"]
#names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
arrayvar <- as.array(variables["V2"])
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
arrayvar <- variables["V2"]
arrayvar
#names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
varnames <- as.vector(variables["V2"])
varnames
#names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
varnames <- t(variables["V2"])
varnames
#names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
names(traingset)
varnames <- t(variables["V2"])
varnames
names(traingset) <- varnames
names(traingset)
#names(traingset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
#names(traingset)
varnames <- t(variables["V2"])
names(traingset) <- varnames
names(testset) <- varnames
names(traingset)
names(testset)
#names(traingset)
View(testset)
#Project of Coursera
#1 - Merging
variables <- read.table("./UCI HAR Dataset/features.txt")
traingset <- read.table("./UCI HAR Dataset/train/X_train.txt") #Training set
testset <- read.table("./UCI HAR Dataset/test/X_test.txt") #Test set
#head(traingset)
#head(testset)
#head(variables)
#names(traingset)
varnames <- t(variables["V2"])
names(traingset) <- varnames
names(testset) <- varnames
names(traingset)
names(testset)
library(swirl)
swirl()
detach("package:swirl", unload = TRUE)
library(swirl)
swirl()
detach("package:swirl", unload = TRUE)
library(swirl)
swirl()
install.packages(c("dplyr", "tidyr", "lubridate"))
swirl()
Sys.getlocale()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = ludridate)
help(package = lubridate)
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
.
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55).
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 16, minutes = 05, seconds = 55)
this_moment
nyc = now(tzone = "America/New_York")
nyc = now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
